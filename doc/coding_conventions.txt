************************************************************************************************
Copyright 2014 Peter Clark

This file is part of Lifeline Engine.

Lifeline Engine is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Lifeline Engine is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Lifeline Engine.  If not, see <http://www.gnu.org/licenses/>.
************************************************************************************************

**** Class naming ****
All lower case with underscores except for acronyms which will be uppercase.

**** Variable naming ****
See "Class naming"

For private member variables use p_*
For public member variables use m_*
Exclusively use getters/setters for non-POD types.

**** Constructor/Destructors ****
Prefer using constructors/destructors vs initialize/terminate (or other similar member function
scheme). If a constructor fails, throw a fatal_construction_exception if the failure is non-
recoverable. Otherwise throw an appropriate exception.

Member initializer list starting token `:` should be placed on same line as closing parenthesis.

**** Forward Declaration of class/structs ****
Should be grouped together with the comment header `// fwd-decl`

**** Getter/Setters ****
Placement in class declaration: always last.

**** Static methods(member functions) ****
Place after all non-static methods.

**** C vs C++ ****
Always select C++ over C when feasible. This will be done as a learning experience as I have
always done the opposite in the past.
